name: Weekly Restic Image Build & Test

on:
  schedule:
    - cron: "0 0 * * 0"  # Every Sunday at midnight UTC
  workflow_dispatch:   # Manual trigger

jobs:
  build-and-test:
    name: Build, Test, and Scan Restic Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Update Restic Version
      run: |
        chmod +x ./scripts/update_restic_version.py
        ./scripts/update_restic_version.py

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Verify Docker Login
      run: docker info

    - name: Build Docker Image
      # Build the image and tag it with a unique tag (using the commit SHA in this example)
      run: |
        # Build the image and tag it using the commit SHA for traceability
        IMAGE_TAG="restic_image_build:${{ github.sha }}"
        docker build -t $IMAGE_TAG .

    - name: Run Test Backup (Dry Run)
      run: |
        IMAGE_TAG="restic_image_build:${{ github.sha }}"
        docker run --rm $IMAGE_TAG restic --help

    - name: Save Docker Image as Tar Archive
      run: |
        IMAGE_TAG="restic_image_build:${{ github.sha }}"
        docker save $IMAGE_TAG -o image.tar
      # Save the image file as an artifact if you wish to inspect it later
      # (Optional step: use actions/upload-artifact@v3)

    - name: Scan Image with Grype and Fail on Critical Vulnerabilities
      run: |
        # Run Grype in a container to scan the saved image tar file.
        # Mount the tar file into the container.
        docker run --rm -v "$(pwd)/image.tar:/image.tar" anchore/grype:latest /image.tar --fail-on critical
      # The --fail-on critical flag makes the step fail if any critical vulnerabilities are detected.

    - name: Notify on Failure
      if: failure()
      run: |
        # Replace this with your preferred notification mechanism (e.g., Slack, email, GitHub issue)
        echo "One or more steps failed. Sending notification..."